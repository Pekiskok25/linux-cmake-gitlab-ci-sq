name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    steps:
  - name: Analyze with SonarCloud

    # You can pin the exact commit or the version.
    # uses: SonarSource/sonarcloud-github-action@v2.2.0
    uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
    with:
      # Additional arguments for the SonarScanner CLI
      args:
        # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
        # mandatory
        -Dsonar.projectKey=
        -Dsonar.organization=
        # Comma-separated paths to directories containing main source files.
        #-Dsonar.sources= # optional, default is project base directory
        # Comma-separated paths to directories containing test source files.
        #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
        # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
        #-Dsonar.verbose= # optional, default is false
      # When you need the analysis to take place in a directory other than the one from which it was launched, default is .
      projectBaseDir: .

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: configure
      run: ./configure
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make distcheck
      run: make distcheck
